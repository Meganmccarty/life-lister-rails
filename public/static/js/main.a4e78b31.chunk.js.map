{"version":3,"sources":["loading.gif","components/cookies.js","components/Header.js","images/example-life-list.png","images/taxon-form.png","images/filter.png","images/filtered-list.png","images/record-before-edit.png","images/record-during-edit.png","images/record-after-edit.png","images/make-public.png","images/share-life-list.png","images/link-copied.png","images/example-shared-life-list.png","components/Home.js","components/Login.js","components/Signup.js","components/RecordForm.js","components/RecordCard.js","components/RecordList.js","components/Profile.js","components/ShareLifeList.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["CSRFToken","cookies","split","find","cookie","startsWith","Header","user","onLogout","history","useHistory","role","className","to","username","onClick","fetch","method","headers","document","then","push","Home","src","exampleLifeList","alt","taxonForm","filter","filteredList","recordBeforeEdit","recordDuringEdit","recordAfterEdit","makePublic","shareLifeList","linkCopied","exampleSharedLifeList","id","Login","onLogin","useState","setUsername","password","setPassword","errors","setErrors","onSubmit","e","preventDefault","configObj","body","JSON","stringify","response","ok","json","error","console","log","htmlFor","type","placeholder","value","onChange","target","Signup","confirmPassword","setConfirmPassword","join","RecordForm","addRecord","taxon","setTaxon","category","setCategory","dateSeen","setDateSeen","notes","setNotes","data","catch","required","RecordCard","onPatchRecord","onDeleteRecord","editMode","setEditMode","editCategory","setEditCategory","editDateSeen","setEditDateSeen","editNotes","setEditNotes","image","common_name","color","handleCategoryColor","species","date","RecordList","onPatchUser","records","setFilter","sort","setSort","copied","setCopied","displayRecords","record","a","b","date_seen","localeCompare","map","handleProfile","public_profile","dummy","createElement","appendChild","select","execCommand","removeChild","Profile","setRecords","handleAddRecord","newRecord","handlePatchRecord","updatedRecord","updatedRecordsArray","handleDeleteRecord","useEffect","recordsForUser","displayUser","ShareLifeList","publicUser","setPublicUser","loading","setLoading","useParams","loadingGIF","style","borderTopLeftRadius","borderTopRightRadius","Footer","App","setUser","handleLogin","exact","path","updatedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a4e78b31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.42aaa181.gif\";","function CSRFToken(cookies) {\n    const splitCookies = cookies.split('; ');\n    return splitCookies.find(cookie => cookie.startsWith(\"CSRF-TOKEN=\")).split('=')[1];\n}\n\nexport default CSRFToken;","import { Link, useHistory } from \"react-router-dom\";\nimport CSRFToken from \"./cookies\";\n\nfunction Header({ user, onLogout }) {\n    const history = useHistory();\n\n    function handleLogout() {\n        fetch(\"/logout\", {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRF-Token\": CSRFToken(document.cookie)\n            },\n        })\n            .then(() => {\n                onLogout()\n                history.push(\"/login\")\n            });\n    };\n\n    return (\n        <nav role=\"navigation\">\n            <div><Link className=\"logo\" to=\"/\">Life-Lister</Link></div>\n            <div>\n                {user ?\n                    <>\n                        <span>Welcome, {user.username}!</span>\n                        <Link to=\"/profile\">Profile</Link>\n                        <button onClick={handleLogout}>Logout</button>\n                    </>\n                    :\n                    <>\n                        <Link to=\"/login\">Login</Link>\n                        <Link to=\"/signup\">Signup</Link>\n                    </>\n                }\n            </div>\n        </nav>\n    );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/example-life-list.5216226c.png\";","export default __webpack_public_path__ + \"static/media/taxon-form.98a82e89.png\";","export default __webpack_public_path__ + \"static/media/filter.764ccc90.png\";","export default __webpack_public_path__ + \"static/media/filtered-list.d2d93be4.png\";","export default __webpack_public_path__ + \"static/media/record-before-edit.5346f84a.png\";","export default __webpack_public_path__ + \"static/media/record-during-edit.d983e622.png\";","export default __webpack_public_path__ + \"static/media/record-after-edit.3dc18dcb.png\";","export default __webpack_public_path__ + \"static/media/make-public.1c71e660.png\";","export default __webpack_public_path__ + \"static/media/share-life-list.6e4472e2.png\";","export default __webpack_public_path__ + \"static/media/link-copied.c636e010.png\";","export default __webpack_public_path__ + \"static/media/example-shared-life-list.5838ca53.png\";","import { Link } from 'react-router-dom';\n\nimport exampleLifeList from '../images/example-life-list.png';\nimport taxonForm from '../images/taxon-form.png';\nimport filter from '../images/filter.png';\nimport filteredList from '../images/filtered-list.png';\nimport recordBeforeEdit from '../images/record-before-edit.png';\nimport recordDuringEdit from '../images/record-during-edit.png';\nimport recordAfterEdit from '../images/record-after-edit.png';\nimport makePublic from '../images/make-public.png';\nimport shareLifeList from '../images/share-life-list.png';\nimport linkCopied from '../images/link-copied.png';\nimport exampleSharedLifeList from '../images/example-shared-life-list.png';\n\nfunction Home() {\n    return (\n        <>\n            <h1>Life-Lister: Track the Organisms You've Seen</h1>\n            <img className=\"home-image\" src={exampleLifeList} alt=\"Example Life List\" />\n            <h1>Add a Species Using a Simple Form</h1>\n            <img className=\"home-image\" src={taxonForm} alt=\"Taxon Form\" />\n            <caption>Add a taxon using either a common or scientific name!</caption>\n            <h1>Filter Your Life List by Organism Type and Date Seen</h1>\n            <img className=\"home-image\" src={filter} alt=\"Life List Filter\" />\n            <img className=\"home-image\" src={filteredList} alt=\"Filtered List\" />\n            <h1>Editing Your Life List Records is a Breeze!</h1>\n            <div className=\"image-group\">\n                <img className=\"home-image\" src={recordBeforeEdit} alt=\"Record in Need of Edit\" />\n                <img className=\"home-image\" src={recordDuringEdit} alt=\"Editing Record\" />\n                <img className=\"home-image\" src={recordAfterEdit} alt=\"Edited Record Saved\" />\n            </div>\n            <h1>Share Your Life List with Your Fellow Naturalists!</h1>\n            <div className=\"image-group\">\n                <img className=\"home-image\" src={makePublic} alt=\"Make Your Profile Public\" />\n                <img className=\"home-image\" src={shareLifeList} alt=\"Clicking the 'Share Life List' Button\" />\n                <img className=\"home-image\" src={linkCopied} alt=\"Your Profile Link is Copied to the Clipboard!\" />\n            </div>\n            <img className=\"home-image\" src={exampleSharedLifeList} alt=\"Example Shared Life List\" />\n            <h1>Want to Start Your Life List?</h1>\n            <button id=\"home-signup\"><Link to=\"/signup\">Create a Free Account!</Link></button>\n            <br />\n        </>\n    );\n};\n\nexport default Home;","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CSRFToken from './cookies';\n\nfunction Login({ onLogin }) {\n    const history = useHistory();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors(\"\");\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-Token\": CSRFToken(document.cookie)\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password\n            }),\n        }\n        fetch(\"/login\", configObj)\n            .then(response => {\n                if (response.ok) {\n                    response.json().then((user) => {\n                        onLogin(user);\n                        setUsername(\"\");\n                        setPassword(\"\");\n                        history.push(\"/profile\");\n                    });\n                } else {\n                    response.json().then(error => {\n                        console.log(error.errors);\n                        setErrors(error.errors);\n                    });\n                };\n            });\n    };\n\n\n    return (\n        <div className=\"auth-form\">\n            <div className=\"auth-form-header\">\n                <h1>Log In</h1>\n            </div>\n            <div className=\"auth-form-body\">\n                <form onSubmit={handleSubmit}>\n                    {errors ? <div className=\"errors\">{errors}</div> : null}\n                    <label htmlFor=\"username\" className=\"visuallyhidden\" />\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <label htmlFor=\"password\" className=\"visuallyhidden\" />\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <button type=\"submit\">Login</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CSRFToken from './cookies';\n\nfunction Signup({ onLogin }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState(\"\");\n\n    const history = useHistory();\n\n    console.log(errors)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors(\"\");\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-Token\": CSRFToken(document.cookie)\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password,\n                \"password_confirmation\": confirmPassword\n            }),\n        }\n        fetch(\"/signup\", configObj)\n            .then(response => {\n                if (response.ok) {\n                    response.json().then((user) => {\n                        onLogin(user);\n                        setUsername(\"\");\n                        setPassword(\"\");\n                        setConfirmPassword(\"\");\n                        history.push(\"/profile\");\n                    });\n                } else {\n                    response.json().then(error => {\n                        console.log(error.errors)\n                        setErrors(error.errors.join(\"; \"))\n                    })\n                };\n            });\n    };\n\n    return (\n        <div className=\"auth-form\">\n            <div className=\"auth-form-header\">\n                <h1>Create an Account</h1>\n            </div>\n            <div className=\"auth-form-body\">\n                <form onSubmit={handleSubmit}>\n                    {errors ? <div className=\"errors\">{errors}</div> : null}\n                    <label htmlFor=\"username\" className=\"visuallyhidden\" />\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <label htmlFor=\"password\" className=\"visuallyhidden\" />\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <label htmlFor=\"confirm-password\" className=\"visuallyhidden\" />\n                    <input\n                        type=\"password\"\n                        id=\"confirm-password\"\n                        placeholder=\"Confirm Password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <button type=\"submit\">Signup</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;","import { useState } from 'react';\nimport CSRFToken from './cookies';\n\nfunction RecordForm({ addRecord }) {\n    const [taxon, setTaxon] = useState(\"\");\n    const [category, setCategory] = useState(\"-Choose Category-\");\n    const [dateSeen, setDateSeen] = useState(\"\");\n    const [notes, setNotes] = useState(\"\");\n    const [errors, setErrors] = useState(\"\");\n\n    console.log(category);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors(\"\");\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-Token\": CSRFToken(document.cookie)\n            },\n            body: JSON.stringify({\n                \"taxon\": taxon,\n                \"category\": category,\n                \"date\": dateSeen,\n                \"notes\": notes,\n            }),\n        }\n        fetch(\"/api/records\", configObj)\n            .then(response => {\n                if (response.ok) {\n                    response.json().then(data => {\n                        addRecord(data)\n                        setTaxon(\"\")\n                        setCategory(\"-Choose Category-\")\n                        setDateSeen(\"\")\n                        setNotes(\"\")\n                    })\n                } else {\n                    response.json().then(error => {\n                        console.log(error.errors)\n                        setErrors(error.errors.join(\"; \"))\n                    })\n                }\n            }).catch(error => console.log(error))\n    }\n\n    return (\n        <div className=\"taxon-form\">\n            <div className=\"taxon-form-header\">\n                <h2>Add a Taxon</h2>\n            </div>\n            <div className=\"taxon-form-body\">\n                <form onSubmit={handleSubmit}>\n                    {errors ? <div className=\"errors\">{errors}</div> : null}\n                    <div className=\"taxon-category-date\">\n                        <label htmlFor=\"taxon\" className=\"visuallyhidden\" />\n                        <input\n                            required\n                            type=\"text\"\n                            id=\"taxon\"\n                            placeholder=\"Taxon\"\n                            value={taxon}\n                            onChange={(e) => setTaxon(e.target.value)}\n                        />\n                        <label htmlFor=\"category\" className=\"visuallyhidden\" />\n                        <select id=\"category\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                            <option>-Choose Category-</option>\n                            <option>Amphibian</option>\n                            <option>Bird</option>\n                            <option>Butterfly</option>\n                            <option>Fish</option>\n                            <option>Insect</option>\n                            <option>Mammal</option>\n                            <option>Plant</option>\n                            <option>Reptile</option>\n                            <option>Other</option>\n                        </select>\n                        <label htmlFor=\"date-seen\" className=\"visuallyhidden\" />\n                        <input\n                            type=\"date\"\n                            id=\"date-seen\"\n                            value={dateSeen}\n                            onChange={(e) => setDateSeen(e.target.value)}\n                        />\n                    </div>\n                    <label htmlFor=\"notes\" className=\"visuallyhidden\" />\n                    <textarea\n                        id=\"notes\"\n                        placeholder=\"Notes\"\n                        value={notes}\n                        onChange={(e) => setNotes(e.target.value)}\n                    />\n                    <button type=\"submit\">Create Record</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default RecordForm;","import { useState } from 'react';\nimport CSRFToken from './cookies';\n\nfunction RecordCard({ id, category, dateSeen, notes, taxon, onPatchRecord, onDeleteRecord }) {\n    const [editMode, setEditMode] = useState(false);\n\n    const [editCategory, setEditCategory] = useState(category);\n    const [editDateSeen, setEditDateSeen] = useState(dateSeen);\n    const [editNotes, setEditNotes] = useState(notes);\n\n    function handleEditMode() {\n        if (editMode) {\n            const configObj = {\n                method: \"PATCH\",\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRF-Token\": CSRFToken(document.cookie)\n                },\n                body: JSON.stringify({\n                    category: editCategory,\n                    date: editDateSeen,\n                    notes: editNotes\n                })\n            }\n            fetch(`/api/records/${id}`, configObj)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                    onPatchRecord(data)\n                    setEditMode(false);\n                })\n                .catch(error => console.log(error))\n        } else {\n            setEditMode(true)\n        }\n    }\n\n    function handleDelete() {\n        const configObj = {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRF-Token\": CSRFToken(document.cookie)\n            }\n        }\n        fetch(`/api/records/${id}`, configObj)\n            .then(response => {\n                if (response.ok) {\n                    onDeleteRecord(id)\n                }\n            })\n    }\n\n    function handleCategoryColor() {\n        let color;\n        switch (category) {\n            case \"Amphibian\":\n                color = \"pink-category\";\n                break;\n            case \"Bird\":\n                color = \"blue-category\"\n                break;\n            case \"Butterfly\":\n                color = \"purple-category\";\n                break;\n            case \"Fish\":\n                color = \"yellow-category\";\n                break;\n            case \"Insect\":\n                color = \"orange-category\";\n                break;\n            case \"Mammal\":\n                color = \"gray-category\";\n                break;\n            case \"Plant\":\n                color = \"green-category\";\n                break;\n            case \"Reptile\":\n                color = \"indigo-category\";\n                break;\n            case \"Other\":\n                color = \"red-category\";\n                break;\n        }\n        return color;\n    }\n\n    return (\n        <div className=\"record-card\">\n            <img src={taxon.image} alt={taxon.common_name} />\n            <section>\n                <div className={`${handleCategoryColor()} record-card-taxon`}>\n                    <span>{taxon.common_name}</span>\n                    <span>(<i>{taxon.species}</i>)</span>\n                </div>\n                {editMode ?\n                    <>\n                        <select value={editCategory} onChange={(e) => setEditCategory(e.target.value)}>\n                            <option>--</option>\n                            <option>Amphibian</option>\n                            <option>Bird</option>\n                            <option>Butterfly</option>\n                            <option>Fish</option>\n                            <option>Insect</option>\n                            <option>Mammal</option>\n                            <option>Plant</option>\n                            <option>Reptile</option>\n                            <option>Other</option>\n                        </select>\n                        <input type=\"date\" value={editDateSeen} onChange={(e) => setEditDateSeen(e.target.value)} />\n                        <textarea value={editNotes} onChange={(e) => setEditNotes(e.target.value)} />\n                    </>\n                    :\n                    <div className=\"record-card-info\">\n                        <span>First seen: {dateSeen}</span>\n                        {notes ? <span>{notes}</span> : <br />}\n                    </div>\n                }\n                <div className=\"button-container\">\n                    <button className=\"save-edit-button\" onClick={handleEditMode}>{editMode ? \"Save\" : \"Edit\"}</button>\n                    <button className=\"delete-button\" onClick={handleDelete}>Delete</button>\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default RecordCard;","import { useState } from 'react';\n\nimport RecordCard from './RecordCard';\nimport CSRFToken from './cookies';\n\nfunction RecordList({ user, onPatchUser, records, onPatchRecord, onDeleteRecord }) {\n    const [filter, setFilter] = useState(\"--\");\n    const [sort, setSort] = useState(\"--\");\n    const [copied, setCopied] = useState(null);\n\n    const displayRecords = records\n        .filter(record => {\n            return filter !== \"--\" ? record.category === filter : record;\n        })\n        .sort((a, b) => {\n            if (sort === \"Most Recent\") {\n                return b.date_seen.localeCompare(a.date_seen);\n            } else if (sort === \"Oldest\") {\n                return a.date_seen.localeCompare(b.date_seen);\n            } else {\n                return records;\n            }\n        })\n        .map(record => {\n            return (\n                <RecordCard\n                    key={record.id}\n                    id={record.id}\n                    category={record.category}\n                    dateSeen={record.date_seen}\n                    notes={record.notes}\n                    taxon={record.taxon}\n                    onDeleteRecord={onDeleteRecord}\n                    onPatchRecord={onPatchRecord}\n                />\n            );\n        });\n    \n    function handleProfile() {\n        const configObj = {\n            method: \"PATCH\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-Token\": CSRFToken(document.cookie)\n            },\n            body: JSON.stringify({\n                public_profile: !user.public_profile\n            })\n        }\n        fetch(`/api/users/${user.id}`, configObj)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Updated User: \", data)\n                onPatchUser(data)\n            })\n            .catch(error => console.log(error))\n    }\n\n    function handleCopyLifeListURL(e) {\n        const dummy = document.createElement(\"input\");\n        document.body.appendChild(dummy);\n        dummy.value = e.target.value;\n        dummy.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(dummy);\n        setCopied(\"Link Copied!\")\n    }\n\n    return (\n        <>\n            <div className=\"filter-and-profile\">\n                <div className=\"filter\">\n                    <label htmlFor=\"filter-category\">Filter by Category: </label>\n                    <select id=\"filter-category\" value={filter} onChange={(e) => setFilter(e.target.value)}>\n                        <option>--</option>\n                        <option>Amphibian</option>\n                        <option>Bird</option>\n                        <option>Butterfly</option>\n                        <option>Fish</option>\n                        <option>Insect</option>\n                        <option>Mammal</option>\n                        <option>Plant</option>\n                        <option>Reptile</option>\n                        <option>Other</option>\n                    </select>\n                    <label htmlFor=\"sort-date\">Sort by Date Seen: </label>\n                    <select id=\"sort-date\" value={sort} onChange={(e) => setSort(e.target.value)}>\n                        <option>--</option>\n                        <option>Most Recent</option>\n                        <option>Oldest</option>\n                    </select>\n                </div>\n                <div className=\"share-profile\">\n                    {user.public_profile === false ?\n                        <button onClick={handleProfile}>Make my profile public!</button>\n                        :\n                        <>\n                            <button value={`https://life-lister.herokuapp.com/lifelist/${user.username}`} onClick={handleCopyLifeListURL}>{copied ? <span id=\"copied-text\">{copied}</span> : <>Share my life list!</>}</button>\n                            <button onClick={handleProfile}>Make my profile private</button>\n                        </>\n                    }\n                </div>\n            </div>\n            <div className=\"record-list\">\n                {displayRecords}\n            </div>\n        </>\n    );\n};\n\nexport default RecordList;","import { useEffect, useState } from 'react';\n\nimport RecordForm from './RecordForm';\nimport RecordList from './RecordList';\n\nfunction Profile({ user, onPatchUser }) {\n    const [records, setRecords] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/api/records\")\n            .then(response => {\n                if (response.ok) {\n                    response.json().then(data => {\n                        const recordsForUser = data.filter(record => record.user.id === user.id)\n                        setRecords(recordsForUser)\n                    });\n                };\n            });\n    }, []);\n\n    function handleAddRecord(newRecord) {\n        setRecords([...records, newRecord])\n    }\n\n    function handlePatchRecord(updatedRecord) {\n        const updatedRecordsArray = records.map(record => {\n            return record.id === updatedRecord.id ? updatedRecord : record;\n        })\n        setRecords(updatedRecordsArray)\n    }\n\n    function handleDeleteRecord(id) {\n        const updatedRecordsArray = records.filter(record => record.id !== id);\n        setRecords(updatedRecordsArray);\n    }\n\n    function displayUser() {\n        if (user) {\n            return (\n                <div className=\"profile\">\n                    <RecordForm addRecord={handleAddRecord} />\n                    <RecordList user={user} onPatchUser={onPatchUser} records={records} onPatchRecord={handlePatchRecord} onDeleteRecord={handleDeleteRecord}/>\n                </div>\n            );\n        };\n    };\n\n    return (\n        <>\n            {displayUser()}\n        </>\n    );\n};\n\nexport default Profile;","import { useParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport loadingGIF from '../loading.gif'\n\nfunction ShareLifeList() {\n    const [publicUser, setPublicUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [filter, setFilter] = useState(\"--\");\n    const [sort, setSort] = useState(\"--\");\n    const username = useParams().username;\n\n    useEffect(() => {\n        fetch(`/users/${username}`)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                if (data.public_profile === true) {\n                    setPublicUser(data)\n                }\n                setLoading(false);\n            })\n            .catch(error => console.log(error))\n    }, [])\n\n    function handleCategoryColor(category) {\n        let color;\n        switch (category) {\n            case \"Amphibian\":\n                color = \"pink-category\";\n                break;\n            case \"Bird\":\n                color = \"blue-category\"\n                break;\n            case \"Butterfly\":\n                color = \"purple-category\";\n                break;\n            case \"Fish\":\n                color = \"yellow-category\";\n                break;\n            case \"Insect\":\n                color = \"orange-category\";\n                break;\n            case \"Mammal\":\n                color = \"gray-category\";\n                break;\n            case \"Plant\":\n                color = \"green-category\";\n                break;\n            case \"Reptile\":\n                color = \"indigo-category\";\n                break;\n            case \"Other\":\n                color = \"red-category\";\n                break;\n        }\n        return color;\n    }\n\n    return (\n        <>\n            {loading ? <img id=\"loading\" src={loadingGIF} alt=\"loading\"/> : \n            publicUser ?\n                <>\n                    <h1>{publicUser.username}'s Life List</h1>\n                    <div className=\"filter\">\n                        <label htmlFor=\"filter-category\">Filter by Category: </label>\n                        <select id=\"filter-category\" value={filter} onChange={(e) => setFilter(e.target.value)}>\n                            <option>--</option>\n                            <option>Bird</option>\n                            <option>Butterfly</option>\n                            <option>Fish</option>\n                            <option>Insect</option>\n                            <option>Mammal</option>\n                            <option>Plant</option>\n                            <option>Reptile</option>\n                            <option>Other</option>\n                        </select>\n                        <label htmlFor=\"sort-date\">Sort by Date Seen: </label>\n                        <select id=\"sort-date\" value={sort} onChange={(e) => setSort(e.target.value)}>\n                            <option>--</option>\n                            <option>Most Recent</option>\n                            <option>Oldest</option>\n                        </select>\n                    </div>\n                    <div className=\"shared-lifelist\">\n                        {publicUser.records.filter(record => {\n                            return filter !== \"--\" ? record.category === filter : record;\n                        })\n                            .sort((a, b) => {\n                                if (sort === \"Most Recent\") {\n                                    return b.date_seen.localeCompare(a.date_seen);\n                                } else if (sort === \"Oldest\") {\n                                    return a.date_seen.localeCompare(b.date_seen);\n                                } else {\n                                    return publicUser.records;\n                                }\n                            }).map(record => {\n                                return (<div className=\"record-card\">\n                                    <img src={record.taxon.image} alt={record.taxon.common_name} style={{ borderTopLeftRadius: \"10px\", borderTopRightRadius: \"10px\" }} />\n                                    <section>\n                                        <div className={`${handleCategoryColor(record.category)} record-card-taxon`}>\n                                            <span>{record.taxon.common_name}</span>\n                                            <span>(<i>{record.taxon.species}</i>)</span>\n                                        </div>\n                                        <div className=\"record-card-info\">\n                                            <span>First seen: {record.date_seen}</span>\n                                            {record.notes ? <span>{record.notes}</span> : <br />}\n                                        </div>\n                                    </section>\n                                </div>)\n                            })}\n                    </div>\n                </>\n                :\n                <>\n                    <h1>Oops, you've tried seeing a Life List that is marked as private!</h1>\n                    <h2>If you tried accessing your life list, you'll need to <Link to=\"/login\">log in</Link> and visit your profile.</h2>\n                    <h2>If you want to share your life list, please ensure you have marked it as public after logging in.</h2>\n                </>\n            \n            }\n        </>\n    );\n};\n\nexport default ShareLifeList;","function Footer() {\n    return (\n        <footer>Website created by Megan McCarty</footer>\n    );\n};\n\nexport default Footer;","import { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport loadingGIF from '../loading.gif'\n\nimport Header from './Header';\nimport Home from './Home';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Profile from './Profile';\nimport ShareLifeList from './ShareLifeList';\nimport Footer from './Footer';\n\nfunction App() {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(\"/api/profile\")\n            .then(response => {\n                if (response.ok) {\n                    response.json().then(user => {\n                        setUser(user);\n                        setLoading(false);\n                    });\n                } else {\n                    setLoading(false);\n                }\n            })\n    }, []);\n\n    function handleLogin(user) {\n        setUser(user);\n    };\n\n    function handleLogout() {\n        setUser(null);\n    };\n\n    function handlePatchUser(updatedUser) {\n        setUser(updatedUser);\n    };\n\n    return (\n        <>\n            <Header user={user} onLogout={handleLogout} />\n            <main role=\"main\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route exact path=\"/login\">\n                        {loading ? <img id=\"loading\" src={loadingGIF} alt=\"loading\"/> : user ? <Redirect to=\"/profile\"></Redirect> : <Login onLogin={handleLogin} />}\n                    </Route>\n                    <Route exact path=\"/signup\">\n                        {loading ? <img id=\"loading\" src={loadingGIF} alt=\"loading\"/> : user ? <Redirect to=\"/profile\"></Redirect> : <Signup onLogin={handleLogin} />}\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        {user ? <Profile user={user} onPatchUser={handlePatchUser} /> : <Redirect to=\"/login\"></Redirect>}\n                    </Route>\n                    <Route exact path=\"/lifelist/:username\">\n                        <ShareLifeList/>\n                    </Route>\n                </Switch>\n            </main>\n            <Footer />\n        </>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './components/App';\nimport './styles.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}